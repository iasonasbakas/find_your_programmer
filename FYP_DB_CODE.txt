CREATE TABLE PROGRAMMER (
PROGRID INT NOT NULL AUTO_INCREMENT,
NAME CHAR,
SURNAME CHAR,
PHONE INT,
EMAIL VARCHAR(20),
CATID INT,
PRIMARY KEY (PROGRID));


CREATE TABLE PROGRLANG (
LANGID INT NOT NULL AUTO_INCREMENT,
NAME VARCHAR(20),
PRIMARY KEY(LANGID));

CREATE TABLE PROGRSKILLS (
PROGRID INT NOT NULL,
LANGID INT NOT NULL,
CONSTRAINT PKPROGRID FOREIGN KEY (PROGRID) REFERENCES PROGRAMMER(PROGRID),
CONSTRAINT PKLANGID FOREIGN KEY (LANGID) REFERENCES PROGRLANG(LANGID));

CREATE TABLE CUSTOMER (
CUSTID INT NOT NULL AUTO_INCREMENT,
USERNAME VARCHAR(20) NOT NULL,
PASSWORD VARCHAR(30) NOT NULL,
NAME VARCHAR(15) NOT NULL,
SURNAME VARCHAR(15) NOT NULL,
PHONE INT NOT NULL,
EMAIL VARCHAR(20) NOT NULL,
PRIMARY KEY (CUSTID));

CREATE TABLE MEET (
MEETID INT NOT NULL AUTO_INCREMENT,
DATE DATETIME,
PROGRID INT,
CUSTID INT,
PRIMARY KEY (MEETID),
CONSTRAINT PKP2ROGRID FOREIGN KEY (PROGRID) REFERENCES PROGRAMMER(PROGRID),
CONSTRAINT PK2CUSTID FOREIGN KEY (CUSTID) REFERENCES CUSTOMER(CUSTID));

CREATE TABLE RATING (
RATID INT NOT NULL AUTO_INCREMENT,
RATING INT NOT NULL,
MEETID INT NOT NULL,
PROGRID INT NOT NULL,
CUSTID INT NOT NULL,
PRIMARY KEY (RATID),
CONSTRAINT PKRATPROGRID FOREIGN KEY (PROGRID) REFERENCES PROGRAMMER(PROGRID),
CONSTRAINT PKRATCUSTID FOREIGN KEY (CUSTID) REFERENCES CUSTOMER(CUSTID),
CONSTRAINT PKMEET FOREIGN KEY (MEETID) REFERENCES MEET (MEETID));
